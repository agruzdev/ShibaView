<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:java="http://www.yworks.com/xml/yfiles-common/1.0/java" xmlns:sys="http://www.yworks.com/xml/yfiles-common/markup/primitives/2.0" xmlns:x="http://www.yworks.com/xml/yfiles-common/markup/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:y="http://www.yworks.com/xml/graphml" xmlns:yed="http://www.yworks.com/xml/yed/3" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://www.yworks.com/xml/schema/graphml/1.1/ygraphml.xsd">
  <!--Created by yEd 3.23.1-->
  <key attr.name="Description" attr.type="string" for="graph" id="d0"/>
  <key for="port" id="d1" yfiles.type="portgraphics"/>
  <key for="port" id="d2" yfiles.type="portgeometry"/>
  <key for="port" id="d3" yfiles.type="portuserdata"/>
  <key attr.name="url" attr.type="string" for="node" id="d4"/>
  <key attr.name="description" attr.type="string" for="node" id="d5"/>
  <key for="node" id="d6" yfiles.type="nodegraphics"/>
  <key for="graphml" id="d7" yfiles.type="resources"/>
  <key attr.name="url" attr.type="string" for="edge" id="d8"/>
  <key attr.name="description" attr.type="string" for="edge" id="d9"/>
  <key for="edge" id="d10" yfiles.type="edgegraphics"/>
  <graph edgedefault="directed" id="G">
    <data key="d0" xml:space="preserve"/>
    <node id="n0">
      <data key="d4" xml:space="preserve"/>
      <data key="d6">
        <y:UMLClassNode>
          <y:Geometry height="659.25" width="522.5" x="-651.25" y="1230.375"/>
          <y:Fill color="#C3C3C3" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="13" fontStyle="bold" hasBackgroundColor="false" hasLineColor="false" height="19.92626953125" horizontalTextPosition="center" iconTextGap="4" modelName="custom" textColor="#000000" verticalTextPosition="bottom" visible="true" width="116.68994140625" x="202.905029296875" xml:space="preserve" y="319.661865234375">ViewerApplication<y:LabelModel><y:SmartNodeLabelModel distance="4.0"/></y:LabelModel><y:ModelParameter><y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/></y:ModelParameter></y:NodeLabel>
          <y:UML clipContent="true" constraint="" hasDetailsColor="false" omitDetails="false" stereotype="QObject" use3DEffect="false">
            <y:AttributeLabel xml:space="preserve">private:
    std::unique_ptr&lt;CanvasWidget&gt; mCanvasWidget = nullptr;
    std::unique_ptr&lt;QThread&gt; mBackgroundThread = nullptr;

    QString mOpenedName;
    QDir mDirectory;
    QFileSystemWatcher mDirWatcher;

    QStringList mFilesInDirectory;
    QStringList::const_iterator mCurrentFile;
    size_t mCurrentIdx = 0;</y:AttributeLabel>
            <y:MethodLabel xml:space="preserve">public:
    ViewerApplication(std::chrono::steady_clock::time_point t);
    ~ViewerApplication();

    void open(const QString &amp; path);

signals:
    void eventLoadImage(const QString &amp; path);
    void eventCancelTransition();

    void eventImageDirScanned(size_t imgIdx, size_t totalCount);

public slots:
    void onNextImage();
    void onPrevImage();
    void onFirstImage();
    void onLastImage();
    void onReloadImage();
    void onOpenImage();

    void onError(const QString &amp; what);

    void onDirectoryChanged(const QString &amp;path);

private:
    void loadImageAsync(const QString &amp; path, size_t imgIdx, size_t totalCount);
    void scanDirectory();</y:MethodLabel>
          </y:UML>
        </y:UMLClassNode>
      </data>
    </node>
    <node id="n1">
      <data key="d4" xml:space="preserve"/>
      <data key="d6">
        <y:UMLClassNode>
          <y:Geometry height="2433.208333333333" width="623.75" x="558.125" y="-766.6041666666665"/>
          <y:Fill color="#C3C3C3" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="13" fontStyle="bold" hasBackgroundColor="false" hasLineColor="false" height="19.92626953125" horizontalTextPosition="center" iconTextGap="4" modelName="custom" textColor="#000000" verticalTextPosition="bottom" visible="true" width="93.57177734375" x="265.089111328125" xml:space="preserve" y="26.701171875">CanvasWidget<y:LabelModel><y:SmartNodeLabelModel distance="4.0"/></y:LabelModel><y:ModelParameter><y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/></y:ModelParameter></y:NodeLabel>
          <y:UML clipContent="true" constraint="" hasDetailsColor="false" omitDetails="false" stereotype="QObject" use3DEffect="false">
            <y:AttributeLabel xml:space="preserve">private:
    template &lt;typename Enum_, size_t Length_ = static_cast&lt;size_t&gt;(Enum_::length_)&gt;
    using ActionsArray = EnumArray&lt;QWidgetAction*, Enum_, Length_&gt;;

    using TMActionsArray = ActionsArray&lt;FREE_IMAGE_TMO, 5&gt;;


    QColor mBackgroundColor;

    ImagePtr mImage;

    std::unique_ptr&lt;ImageDescription&gt; mImageDescription;

    std::unique_ptr&lt;ImageProcessor&gt; mImageProcessor;

    bool mTransitionRequested = true;
    bool mTransitionIsReload = false;

    bool mFullScreen = false;

    bool mClick = false;

    bool mDragging = false;
    QPoint mMenuPos { 0, 0 };
    QPoint mClickPos{ 0, 0 };

    bool mStretching = false;
    BorderPosition mHoveredBorder;
    QRect mClickGeometry;

    std::chrono::steady_clock::time_point mStartTime;
    bool mStartup = true;

    bool mShowInfo = false;

    QPoint mOffset{ 0, 0 };

    std::unique_ptr&lt;ZoomController&gt; mZoomController;
    ZoomMode mZoomMode;
    bool mRememberZoom = false;

    bool mBrowsing = false;

    QPoint mCursorPosition;

    TextWidget* mInfoText  = nullptr;
    bool mInfoIsValid = false;

    TextWidget* mErrorText = nullptr;

    TextWidget* mPageText = nullptr;

    std::unique_ptr&lt;Tooltip&gt; mTooltip;

    FilteringMode mFilteringMode;

    GammaType mGammaType = GammaType::eLinear;

    QMenu* mContextMenu = nullptr;

    bool mEnableAnimation = true;
    uint32_t mAnimIndex = 0;

    bool mShowTransparencyCheckboard = false;
    std::shared_future&lt;QPixmap&gt; mCheckboard;

    // Actions
    std::shared_future&lt;ActionsArray&lt;Rotation&gt;&gt; mActRotate;
    std::shared_future&lt;ActionsArray&lt;FlipType&gt;&gt; mActFlip;
    std::shared_future&lt;ActionsArray&lt;ZoomMode&gt;&gt; mActZoom;
    std::shared_future&lt;TMActionsArray&gt; mActToneMapping;
    std::shared_future&lt;ActionsArray&lt;GammaType&gt;&gt; mActGammaType;
    std::shared_future&lt;ActionsArray&lt;ChannelSwizzle&gt;&gt; mActSwizzle;</y:AttributeLabel>
            <y:MethodLabel xml:space="preserve">public:
    CanvasWidget(std::chrono::steady_clock::time_point t);
    ~CanvasWidget();

public slots:
    void onImageReady(ImagePtr image, size_t imgIdx, size_t totalCount);
    void onImageDirScanned(size_t imgIdx, size_t totalCount);

    void onTransitionCanceled();

    void applicationStateChanged(Qt::ApplicationState state);

    // Actions
    void onActNoFilter(bool checked);
    void onActAntialiasing(bool checked);

    void onActRotation(bool checked, Rotation r);
    void onActFlip(bool checked, FlipType f);
    void onActZoomMode(bool checked, ZoomMode z);
    void onActRememberZoom(bool checked);
    void onActToneMapping(bool checked, FREE_IMAGE_TMO m);
    void onActGammaType(bool checked, GammaType g);
    void onActSwizzle(bool checked, ChannelSwizzle s);
    void onActTransparency(bool checked);

    void onShowContextMenu(const QPoint &amp;pos);

    void onAnimationTick(uint64_t imgId);

signals:
    void eventInfoText(QString s);

    void eventNextImage();
    void eventPrevImage();
    void eventFirstImage();
    void eventLastImage();
    void eventReloadImage();
    void eventOpenImage();

protected:
    void paintEvent(QPaintEvent *event) Q_DECL_OVERRIDE;
    void resizeEvent(QResizeEvent *event) Q_DECL_OVERRIDE;
    void keyPressEvent(QKeyEvent *event) Q_DECL_OVERRIDE;
    void keyReleaseEvent(QKeyEvent* event) Q_DECL_OVERRIDE;

private:
    void mousePressEvent(QMouseEvent *event) Q_DECL_OVERRIDE;
    void mouseMoveEvent(QMouseEvent *event) Q_DECL_OVERRIDE;
    void mouseReleaseEvent(QMouseEvent *event) Q_DECL_OVERRIDE;
    void mouseDoubleClickEvent(QMouseEvent *event) Q_DECL_OVERRIDE;
    void wheelEvent(QWheelEvent* event) Q_DECL_OVERRIDE;
    void leaveEvent(QEvent* event) Q_DECL_OVERRIDE;

    void invalidateImageDescription();
    void updateZoomLabel();

    QRect calculateImageRegion() const;

    void resetOffsets();
    void updateOffsets();

    QRect fitWidth(int w, int h) const;

    void recalculateFittingScale();

    bool setFullscreenGeometry();

    void zoomToTarget(QPoint target, int dir);

    void repositionPageText();

    QWidgetAction* createMenuAction(const QString &amp; text);

    ActionsArray&lt;Rotation&gt; initRotationActions();
    ActionsArray&lt;FlipType&gt; initFlipActions();
    ActionsArray&lt;ZoomMode&gt; initZoomActions();
    TMActionsArray initToneMappingActions();
    ActionsArray&lt;GammaType&gt; initGammaTypeActions();
    ActionsArray&lt;ChannelSwizzle&gt; initSwizzleActions();

    QMenu* createContextMenu();

    void invalidateTooltip();

    void invalidateExif();
</y:MethodLabel>
          </y:UML>
        </y:UMLClassNode>
      </data>
    </node>
    <node id="n2">
      <data key="d4" xml:space="preserve"/>
      <data key="d6">
        <y:UMLClassNode>
          <y:Geometry height="370.1875000000002" width="486.5624999999999" x="-633.2812499999999" y="624.9062499999999"/>
          <y:Fill color="#C3C3C3" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="13" fontStyle="bold" hasBackgroundColor="false" hasLineColor="false" height="19.92626953125" horizontalTextPosition="center" iconTextGap="4" modelName="custom" textColor="#000000" verticalTextPosition="bottom" visible="true" width="84.91357421875" x="200.82446289062494" xml:space="preserve" y="175.1306152343751">ImageLoader<y:LabelModel><y:SmartNodeLabelModel distance="4.0"/></y:LabelModel><y:ModelParameter><y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/></y:ModelParameter></y:NodeLabel>
          <y:UML clipContent="true" constraint="" hasDetailsColor="false" omitDetails="false" stereotype="QObject" use3DEffect="false">
            <y:AttributeLabel xml:space="preserve">private:
    QString mName;
    size_t mImgIdx; 
    size_t mImgCount;</y:AttributeLabel>
            <y:MethodLabel xml:space="preserve">public:
    explicit
    ImageLoader(const QString &amp; name);
    ImageLoader(const QString &amp; name, size_t imgIdx, size_t imgCount);

    ~ImageLoader();

signals:
    void eventResult(ImagePtr image, size_t imgIdx, size_t imgCount);

    void eventError(QString what);

public slots:
    void onRun(const QString &amp; path);
</y:MethodLabel>
          </y:UML>
        </y:UMLClassNode>
      </data>
    </node>
    <node id="n3">
      <data key="d4" xml:space="preserve"/>
      <data key="d6">
        <y:UMLClassNode>
          <y:Geometry height="370.1875000000002" width="486.5624999999999" x="626.71875" y="-1445.09375"/>
          <y:Fill color="#C3C3C3" transparent="false"/>
          <y:BorderStyle color="#FF0000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="13" fontStyle="bold" hasBackgroundColor="false" hasLineColor="false" height="19.92626953125" horizontalTextPosition="center" iconTextGap="4" modelName="custom" textColor="#000000" verticalTextPosition="bottom" visible="true" width="84.86279296875" x="200.849853515625" xml:space="preserve" y="175.130615234375">AboutWidget<y:LabelModel><y:SmartNodeLabelModel distance="4.0"/></y:LabelModel><y:ModelParameter><y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/></y:ModelParameter></y:NodeLabel>
          <y:UML clipContent="true" constraint="" hasDetailsColor="false" omitDetails="false" stereotype="QObject, Singleton" use3DEffect="false">
            <y:AttributeLabel xml:space="preserve"/>
            <y:MethodLabel xml:space="preserve">public:
    static
    AboutWidget&amp; getInstance();

    void popUp();

private:
    AboutWidget();

    ~AboutWidget() override;

    void keyPressEvent(QKeyEvent *event) Q_DECL_OVERRIDE;</y:MethodLabel>
          </y:UML>
        </y:UMLClassNode>
      </data>
    </node>
    <node id="n4">
      <data key="d4" xml:space="preserve"/>
      <data key="d6">
        <y:UMLClassNode>
          <y:Geometry height="370.1875000000002" width="486.5624999999999" x="3806.71875" y="984.90625"/>
          <y:Fill color="#C3C3C3" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="13" fontStyle="bold" hasBackgroundColor="false" hasLineColor="false" height="19.92626953125" horizontalTextPosition="center" iconTextGap="4" modelName="custom" textColor="#000000" verticalTextPosition="bottom" visible="true" width="92.130859375" x="197.21582031249994" xml:space="preserve" y="3.0">BitmapSource<y:LabelModel><y:SmartNodeLabelModel distance="4.0"/></y:LabelModel><y:ModelParameter><y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/></y:ModelParameter></y:NodeLabel>
          <y:UML clipContent="true" constraint="" hasDetailsColor="false" omitDetails="false" stereotype="" use3DEffect="false">
            <y:AttributeLabel xml:space="preserve">private:
    FREE_IMAGE_FORMAT mImageFormat;
    FIBITMAP* mBitmap;</y:AttributeLabel>
            <y:MethodLabel xml:space="preserve">public:
    BitmapSource(const QString &amp; filename, FREE_IMAGE_FORMAT fif);

    ~BitmapSource() Q_DECL_OVERRIDE;

private:
    uint32_t doPagesCount() const Q_DECL_OVERRIDE;

    const ImagePage* doDecodePage(uint32_t pageIdx) Q_DECL_OVERRIDE;

    void doReleasePage(const ImagePage* page) Q_DECL_OVERRIDE;

    bool doStoresDifference() const Q_DECL_OVERRIDE;</y:MethodLabel>
          </y:UML>
        </y:UMLClassNode>
      </data>
    </node>
    <node id="n5">
      <data key="d4" xml:space="preserve"/>
      <data key="d6">
        <y:UMLClassNode>
          <y:Geometry height="370.1875000000002" width="486.5624999999999" x="4106.71875" y="264.9062499999999"/>
          <y:Fill color="#FFFF00" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="13" fontStyle="bold" hasBackgroundColor="false" hasLineColor="false" height="19.92626953125" horizontalTextPosition="center" iconTextGap="4" modelName="custom" textColor="#000000" verticalTextPosition="bottom" visible="true" width="85.6435546875" x="200.45947265624994" xml:space="preserve" y="3.0">ImageSource<y:LabelModel><y:SmartNodeLabelModel distance="4.0"/></y:LabelModel><y:ModelParameter><y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/></y:ModelParameter></y:NodeLabel>
          <y:UML clipContent="true" constraint="" hasDetailsColor="false" omitDetails="false" stereotype="" use3DEffect="false">
            <y:AttributeLabel xml:space="preserve">using ImagePagePtr = std::unique_ptr&lt;const ImagePage, ImagePageDeleter&gt;;</y:AttributeLabel>
            <y:MethodLabel xml:space="preserve">public:
    virtual ~ImageSource() = default;

    uint32_t pagesCount() const

    bool storesDiffernece() const

    ImagePagePtr lockPage(uint32_t pageIdx)

    static
    std::shared_ptr&lt;ImageSource&gt; Load(const QString&amp; filename) Q_DECL_NOEXCEPT;

    static
    void Save(FIBITMAP* bmp, const QString&amp; filename);

protected:
    ImageSource() = default;

    virtual uint32_t doPagesCount() const = 0;

    virtual const ImagePage* doDecodePage(uint32_t pageIdx) = 0;

    virtual void doReleasePage(const ImagePage* page) = 0;

    virtual bool doStoresDifference() const = 0;</y:MethodLabel>
          </y:UML>
        </y:UMLClassNode>
      </data>
    </node>
    <node id="n6">
      <data key="d4" xml:space="preserve"/>
      <data key="d6">
        <y:UMLClassNode>
          <y:Geometry height="568.1438244913329" width="513.6804075041945" x="4093.1597962479027" y="-494.07191224566645"/>
          <y:Fill color="#FFFF00" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="13" fontStyle="bold" hasBackgroundColor="false" hasLineColor="false" height="19.92626953125" horizontalTextPosition="center" iconTextGap="4" modelName="custom" textColor="#000000" verticalTextPosition="bottom" visible="true" width="72.6435546875" x="220.51842640834724" xml:space="preserve" y="3.0">ImagePage<y:LabelModel><y:SmartNodeLabelModel distance="4.0"/></y:LabelModel><y:ModelParameter><y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/></y:ModelParameter></y:NodeLabel>
          <y:UML clipContent="true" constraint="" hasDetailsColor="false" omitDetails="false" stereotype="" use3DEffect="false">
            <y:AttributeLabel xml:space="preserve">private:
    FIBITMAP* mBitmap;
    uint32_t mIndex;
    FIBITMAP* mConvertedBitmap;
    bool mFrameNeedsUnload = false;
    FrameFlags mFlags;
    AnimationInfo mAnimation;
    mutable std::unique_ptr&lt;Exif&gt; mExif;</y:AttributeLabel>
            <y:MethodLabel xml:space="preserve">public:
    ImagePage(FIBITMAP* bmp, uint32_t index);

    virtual ~ImagePage();

    QString describeFormat() const

    FIBITMAP* getSourceBitmap() const

    FIBITMAP* getBitmap() const

    uint32_t index() const

    void setAnimation(AnimationInfo anim)

    const AnimationInfo&amp; animation() const

    bool getPixel(uint32_t y, uint32_t x, Pixel* pixel) const

    const FrameFlags&amp; flags() const

    const Exif&amp; getExif() const;

    size_t getMemorySize() const;

    UniqueBitmap getOrMakeThumbnail(uint32_t maxSize) const;</y:MethodLabel>
          </y:UML>
        </y:UMLClassNode>
      </data>
    </node>
    <node id="n7">
      <data key="d4" xml:space="preserve"/>
      <data key="d6">
        <y:UMLClassNode>
          <y:Geometry height="192.1875000000004" width="302.5624999999999" x="4888.71875" y="-426.0937500000002"/>
          <y:Fill color="#C3C3C3" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="13" fontStyle="bold" hasBackgroundColor="false" hasLineColor="false" height="19.92626953125" horizontalTextPosition="center" iconTextGap="4" modelName="custom" textColor="#000000" verticalTextPosition="bottom" visible="true" width="91.37548828125" x="105.59350585937494" xml:space="preserve" y="26.701171875">AnimationInfo<y:LabelModel><y:SmartNodeLabelModel distance="4.0"/></y:LabelModel><y:ModelParameter><y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/></y:ModelParameter></y:NodeLabel>
          <y:UML clipContent="true" constraint="" hasDetailsColor="false" omitDetails="false" stereotype="struct" use3DEffect="false">
            <y:AttributeLabel xml:space="preserve">uint16_t offsetX
uint16_t offsetY 
uint32_t duration
DisposalType disposal</y:AttributeLabel>
            <y:MethodLabel xml:space="preserve"/>
          </y:UML>
        </y:UMLClassNode>
      </data>
    </node>
    <node id="n8">
      <data key="d4" xml:space="preserve"/>
      <data key="d6">
        <y:UMLClassNode>
          <y:Geometry height="188.2812500000004" width="560.3749999999999" x="4069.8125000000005" y="-784.1406250000002"/>
          <y:Fill color="#C3C3C3" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="13" fontStyle="bold" hasBackgroundColor="false" hasLineColor="false" height="19.92626953125" horizontalTextPosition="center" iconTextGap="4" modelName="custom" textColor="#000000" verticalTextPosition="bottom" visible="true" width="27.841796875" x="266.26660156249994" xml:space="preserve" y="3.0">Exif<y:LabelModel><y:SmartNodeLabelModel distance="4.0"/></y:LabelModel><y:ModelParameter><y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/></y:ModelParameter></y:NodeLabel>
          <y:UML clipContent="true" constraint="" hasDetailsColor="false" omitDetails="false" stereotype="" use3DEffect="false">
            <y:AttributeLabel xml:space="preserve">public:
        std::array&lt;std::vector&lt;std::tuple&lt;QString, QVariant&gt;&gt;, FIMD_EXIF_RAW + 1&gt; sections;</y:AttributeLabel>
            <y:MethodLabel xml:space="preserve">public:
    static
    Exif load(FIBITMAP* dib);</y:MethodLabel>
          </y:UML>
        </y:UMLClassNode>
      </data>
    </node>
    <node id="n9">
      <data key="d4" xml:space="preserve"/>
      <data key="d6">
        <y:UMLClassNode>
          <y:Geometry height="579.5625000000002" width="486.5624999999999" x="1406.7187500000002" y="-469.7812500000001"/>
          <y:Fill color="#C3C3C3" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="13" fontStyle="bold" hasBackgroundColor="false" hasLineColor="false" height="19.92626953125" horizontalTextPosition="center" iconTextGap="4" modelName="custom" textColor="#000000" verticalTextPosition="bottom" visible="true" width="113.08447265625" x="186.73901367187494" xml:space="preserve" y="3.0">ImageDescription<y:LabelModel><y:SmartNodeLabelModel distance="4.0"/></y:LabelModel><y:ModelParameter><y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/></y:ModelParameter></y:NodeLabel>
          <y:UML clipContent="true" constraint="" hasDetailsColor="false" omitDetails="false" stereotype="" use3DEffect="false">
            <y:AttributeLabel xml:space="preserve">private:
    ImageInfo mFileInfo;
    QString mFormat;
    float mZoomFactor = 1.0f;
    FREE_IMAGE_TMO mToneMapping = FITMO_CLAMP;
    double mGammaValue = 1.0;
    bool mChangedFlag = false;
    size_t mImageIndex = 0;
    size_t mImagesCount = 0;
    bool mDisplayPath = false;</y:AttributeLabel>
            <y:MethodLabel xml:space="preserve">public:
    ImageDescription()
 
    void setImageInfo(ImageInfo info)

    void setFormat(QString fmt)

    void setToneMapping(FREE_IMAGE_TMO mode)

    void setGammaValue(double value)

    void setZoom(float factor)

    void setChanged(bool flag)

    void setImageIndex(size_t idx, size_t count)

    void setDisplayPath(bool enable = true)

    bool displayPath() const

    QVector&lt;QString&gt; toLines() const;</y:MethodLabel>
          </y:UML>
        </y:UMLClassNode>
      </data>
    </node>
    <node id="n10">
      <data key="d4" xml:space="preserve"/>
      <data key="d6">
        <y:UMLClassNode>
          <y:Geometry height="989.7187499999998" width="468.9843749999999" x="1415.5078125000002" y="675.1406250000002"/>
          <y:Fill color="#C3C3C3" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="13" fontStyle="bold" hasBackgroundColor="false" hasLineColor="false" height="19.92626953125" horizontalTextPosition="center" iconTextGap="4" modelName="custom" textColor="#000000" verticalTextPosition="bottom" visible="true" width="105.16259765625" x="181.91088867187494" xml:space="preserve" y="3.0">ImageProcessor<y:LabelModel><y:SmartNodeLabelModel distance="4.0"/></y:LabelModel><y:ModelParameter><y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/></y:ModelParameter></y:NodeLabel>
          <y:UML clipContent="true" constraint="" hasDetailsColor="false" omitDetails="false" stereotype="" use3DEffect="false">
            <y:AttributeLabel xml:space="preserve">private:
    QWeakPointer&lt;Image&gt; mSrcImage;
    UniqueBitmap mProcessBuffer;
    QPixmap mDstPixmap;

    bool mIsValid = false;
    bool mIsBuffered = false;

    Rotation mRotation = Rotation::eDegree0;

    EnumArray&lt;bool, FlipType&gt; mFlips = { false };

    FREE_IMAGE_TMO mToneMapping = FITMO_CLAMP;

    double mGammaValue = 1.0;

    ChannelSwizzle mSwizzleType = ChannelSwizzle::eRGB;</y:AttributeLabel>
            <y:MethodLabel xml:space="preserve">public:
    ImageProcessor();

    ImageProcessor(QWeakPointer&lt;Image&gt; image)

    ~ImageProcessor();

    void attachSource(QWeakPointer&lt;Image&gt; image);

    void detachSource();

    Rotation rotation() const

    void setRotation(Rotation r)

    void setFlip(FlipType flip, bool value)

    FREE_IMAGE_TMO toneMappingMode() const

    void setToneMappingMode(FREE_IMAGE_TMO mode)

    void setGamma(double value)

    double getGamma() const

    void setChannelSwizzle(ChannelSwizzle swizzle)

    ChannelSwizzle getChannelSwizzle() const

    bool getPixel(uint32_t y, uint32_t x, Pixel* p) const;

    uint32_t width() const;

    uint32_t height() const;

    const QPixmap&amp; getResultPixmap();

    const UniqueBitmap&amp; getResultBitmap();

private:
    void onInvalidated(Image* emitter) override;

    FIBITMAP* process(const ImageFrame&amp; frame);</y:MethodLabel>
          </y:UML>
        </y:UMLClassNode>
      </data>
    </node>
    <node id="n11">
      <data key="d4" xml:space="preserve"/>
      <data key="d6">
        <y:UMLClassNode>
          <y:Geometry height="702.2187500000007" width="384.6093749999999" x="2537.6953125" y="98.89062499999966"/>
          <y:Fill color="#C3C3C3" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="13" fontStyle="bold" hasBackgroundColor="false" hasLineColor="false" height="19.92626953125" horizontalTextPosition="center" iconTextGap="4" modelName="custom" textColor="#000000" verticalTextPosition="bottom" visible="true" width="41.57177734375" x="171.51879882812494" xml:space="preserve" y="3.0">Image<y:LabelModel><y:SmartNodeLabelModel distance="4.0"/></y:LabelModel><y:ModelParameter><y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/></y:ModelParameter></y:NodeLabel>
          <y:UML clipContent="true" constraint="" hasDetailsColor="false" omitDetails="false" stereotype="" use3DEffect="false">
            <y:AttributeLabel xml:space="preserve">private:
    uint64_t mId;

    std::shared_ptr&lt;ImageSource&gt; mImageSource;
    std::unique_ptr&lt;Player&gt; mImagePlayer;

    ImageInfo mInfo;

    std::vector&lt;ImageListener*&gt; mListeners;</y:AttributeLabel>
            <y:MethodLabel xml:space="preserve">public:
    Image(QString name, QString filename) noexcept;

    ~Image();

    const ImageInfo &amp; info() const

    bool getPixel(uint32_t y, uint32_t x, Pixel* p) const

    uint32_t width() const

    uint32_t height() const

    uint32_t channels() const;

    bool isNull() const

    bool notNull() const

    FIBITMAP* getBitmap() const

    uint32_t pagesCount() const

    const ImagePage&amp; currentPage() const;

    void next();

    void prev();

    uint64_t id() const

    void addListener(ImageListener* listener);

    void removeListener(ImageListener* listener);</y:MethodLabel>
          </y:UML>
        </y:UMLClassNode>
      </data>
    </node>
    <node id="n12">
      <data key="d4" xml:space="preserve"/>
      <data key="d6">
        <y:UMLClassNode>
          <y:Geometry height="183.07812500000023" width="388.9062499999999" x="2535.546875" y="1198.4609374999998"/>
          <y:Fill color="#FF00FF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="13" fontStyle="bold" hasBackgroundColor="false" hasLineColor="false" height="19.92626953125" horizontalTextPosition="center" iconTextGap="4" modelName="custom" textColor="#000000" verticalTextPosition="bottom" visible="true" width="92.1435546875" x="148.38134765624994" xml:space="preserve" y="3.0">ImageListener<y:LabelModel><y:SmartNodeLabelModel distance="4.0"/></y:LabelModel><y:ModelParameter><y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/></y:ModelParameter></y:NodeLabel>
          <y:UML clipContent="true" constraint="" hasDetailsColor="false" omitDetails="false" stereotype="" use3DEffect="false">
            <y:AttributeLabel xml:space="preserve"/>
            <y:MethodLabel xml:space="preserve">public:
    virtual ~ImageListener() = default;

    virtual void onInvalidated(Image*)</y:MethodLabel>
          </y:UML>
        </y:UMLClassNode>
      </data>
    </node>
    <node id="n13">
      <data key="d4" xml:space="preserve"/>
      <data key="d6">
        <y:UMLClassNode>
          <y:Geometry height="589.1140648625351" width="601.0111921901206" x="3179.4944039049396" y="155.44296756873246"/>
          <y:Fill color="#C3C3C3" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="13" fontStyle="bold" hasBackgroundColor="false" hasLineColor="false" height="19.92626953125" horizontalTextPosition="center" iconTextGap="4" modelName="custom" textColor="#000000" verticalTextPosition="bottom" visible="true" width="43.03173828125" x="278.9897269544353" xml:space="preserve" y="3.0">Player<y:LabelModel><y:SmartNodeLabelModel distance="4.0"/></y:LabelModel><y:ModelParameter><y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/></y:ModelParameter></y:NodeLabel>
          <y:UML clipContent="true" constraint="" hasDetailsColor="false" omitDetails="false" stereotype="" use3DEffect="false">
            <y:AttributeLabel xml:space="preserve">private:
    std::shared_ptr&lt;ImageSource&gt; mSource;

    std::deque&lt;std::unique_ptr&lt;CacheEntry&gt;&gt; mFramesCache;
    size_t mCacheIndex   = 0;
    size_t mMaxCacheSize = 1;</y:AttributeLabel>
            <y:MethodLabel xml:space="preserve">public:
    Player(std::shared_ptr&lt;ImageSource&gt; src);

    ~Player();

    const ImagePage&amp; getCurrentPage() const;

    FIBITMAP* getBlendedBitmap() const;

    uint32_t framesNumber() const;

    uint32_t getWidth() const;

    uint32_t getHeight() const;

    void next();

    void prev();

private:
    struct CacheEntry;

    //-------------------------------------------------------------------------------------

    std::unique_ptr&lt;CacheEntry&gt; loadZeroFrame(ImageSource* source);

    std::unique_ptr&lt;CacheEntry&gt; loadNextFrame(ImageSource* source, const CacheEntry&amp; prev);</y:MethodLabel>
          </y:UML>
        </y:UMLClassNode>
      </data>
    </node>
    <node id="n14">
      <data key="d4" xml:space="preserve"/>
      <data key="d6">
        <y:UMLClassNode>
          <y:Geometry height="189.55520522303846" width="393.6157852118539" x="3283.192107394073" y="-304.7776026115192"/>
          <y:Fill color="#C3C3C3" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="13" fontStyle="bold" hasBackgroundColor="false" hasLineColor="false" height="19.92626953125" horizontalTextPosition="center" iconTextGap="4" modelName="custom" textColor="#000000" verticalTextPosition="bottom" visible="true" width="123.93896484375" x="134.83841018405195" xml:space="preserve" y="3.0">Player::CacheEntry<y:LabelModel><y:SmartNodeLabelModel distance="4.0"/></y:LabelModel><y:ModelParameter><y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/></y:ModelParameter></y:NodeLabel>
          <y:UML clipContent="true" constraint="" hasDetailsColor="false" omitDetails="false" stereotype="" use3DEffect="false">
            <y:AttributeLabel xml:space="preserve">public:
    ImageSource::ImagePagePtr page;
    UniqueBitmap blendedImage;</y:AttributeLabel>
            <y:MethodLabel xml:space="preserve">public:
    CacheEntry(ImageSource::ImagePagePtr page)</y:MethodLabel>
          </y:UML>
        </y:UMLClassNode>
      </data>
    </node>
    <node id="n15">
      <data key="d4" xml:space="preserve"/>
      <data key="d6">
        <y:UMLClassNode>
          <y:Geometry height="201.4375000000004" width="253.7499999999999" x="2123.125" y="79.2812499999998"/>
          <y:Fill color="#C3C3C3" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="13" fontStyle="bold" hasBackgroundColor="false" hasLineColor="false" height="19.92626953125" horizontalTextPosition="center" iconTextGap="4" modelName="custom" textColor="#000000" verticalTextPosition="bottom" visible="true" width="65.39453125" x="94.17773437499994" xml:space="preserve" y="26.701171875">ImageInfo<y:LabelModel><y:SmartNodeLabelModel distance="4.0"/></y:LabelModel><y:ModelParameter><y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/></y:ModelParameter></y:NodeLabel>
          <y:UML clipContent="true" constraint="" hasDetailsColor="false" omitDetails="false" stereotype="struct" use3DEffect="false">
            <y:AttributeLabel xml:space="preserve">QString path;
QString name;
size_t bytes
QDateTime modified;
ImageSize dims;
bool animated</y:AttributeLabel>
            <y:MethodLabel xml:space="preserve"/>
          </y:UML>
        </y:UMLClassNode>
      </data>
    </node>
    <node id="n16">
      <data key="d4" xml:space="preserve"/>
      <data key="d6">
        <y:UMLClassNode>
          <y:Geometry height="123.3125000000004" width="177.1874999999999" x="2161.40625" y="-121.65625000000014"/>
          <y:Fill color="#C3C3C3" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="13" fontStyle="bold" hasBackgroundColor="false" hasLineColor="false" height="19.92626953125" horizontalTextPosition="center" iconTextGap="4" modelName="custom" textColor="#000000" verticalTextPosition="bottom" visible="true" width="67.58447265625" x="54.80151367187494" xml:space="preserve" y="26.701171875">ImageSize<y:LabelModel><y:SmartNodeLabelModel distance="4.0"/></y:LabelModel><y:ModelParameter><y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/></y:ModelParameter></y:NodeLabel>
          <y:UML clipContent="true" constraint="" hasDetailsColor="false" omitDetails="false" stereotype="struct" use3DEffect="false">
            <y:AttributeLabel xml:space="preserve">uint32_t width
uint32_t height</y:AttributeLabel>
            <y:MethodLabel xml:space="preserve"/>
          </y:UML>
        </y:UMLClassNode>
      </data>
    </node>
    <node id="n17">
      <data key="d4" xml:space="preserve"/>
      <data key="d6">
        <y:UMLClassNode>
          <y:Geometry height="739.7187500000002" width="580.3124999999999" x="1359.84375" y="-1389.859375"/>
          <y:Fill color="#C3C3C3" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="13" fontStyle="bold" hasBackgroundColor="false" hasLineColor="false" height="19.92626953125" horizontalTextPosition="center" iconTextGap="4" modelName="custom" textColor="#000000" verticalTextPosition="bottom" visible="true" width="101.49365234375" x="239.409423828125" xml:space="preserve" y="359.896240234375">ZoomController<y:LabelModel><y:SmartNodeLabelModel distance="4.0"/></y:LabelModel><y:ModelParameter><y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/></y:ModelParameter></y:NodeLabel>
          <y:UML clipContent="true" constraint="" hasDetailsColor="false" omitDetails="false" stereotype="" use3DEffect="false">
            <y:AttributeLabel xml:space="preserve">private:
    int32_t mBaseValue;

    int32_t mScale;
    int32_t mMinScale;
    int32_t mMaxScale;

    int32_t mFitValue;
    int32_t mFitScaleFloor;
    int32_t mFitScaleCeil;

    bool mAtFitValue;

    float mFitFactor;</y:AttributeLabel>
            <y:MethodLabel xml:space="preserve">public:
    ZoomController(int32_t baseValue, int32_t fitValue, int32_t scaleValue = 0);
    ~ZoomController();

    ZoomController(const ZoomController&amp;) = default;
    ZoomController(ZoomController&amp;&amp;) = default;
    ZoomController&amp; operator=(const ZoomController&amp;) = default;
    ZoomController&amp; operator=(ZoomController&amp;&amp;) = default;

    float getFactor() const;

    int32_t getValue() const;

    int32_t getFitValue() const

    void setFitValue(int32_t value);

    void rebase(int32_t baseValue, int32_t fitValue);

    void rebase(int32_t baseValue)

    void zoomPlus();

    void zoomMinus();

    void moveToIdentity();

    void moveToFit();

    int32_t getScaleValue() const
</y:MethodLabel>
          </y:UML>
        </y:UMLClassNode>
      </data>
    </node>
    <node id="n18">
      <data key="d4" xml:space="preserve"/>
      <data key="d6">
        <y:UMLClassNode>
          <y:Geometry height="291.2812500000002" width="380.3124999999999" x="-580.1562499999999" y="-445.6406250000001"/>
          <y:Fill color="#C3C3C3" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="13" fontStyle="bold" hasBackgroundColor="false" hasLineColor="false" height="19.92626953125" horizontalTextPosition="center" iconTextGap="4" modelName="custom" textColor="#000000" verticalTextPosition="bottom" visible="true" width="47.31640625" x="166.49804687499994" xml:space="preserve" y="135.6774902343751">Tooltip<y:LabelModel><y:SmartNodeLabelModel distance="4.0"/></y:LabelModel><y:ModelParameter><y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/></y:ModelParameter></y:NodeLabel>
          <y:UML clipContent="true" constraint="" hasDetailsColor="false" omitDetails="false" stereotype="" use3DEffect="false">
            <y:AttributeLabel xml:space="preserve">private:
    std::unique_ptr&lt;TextWidget&gt; mTextWidget;
    QPoint mDefaultOffset;</y:AttributeLabel>
            <y:MethodLabel xml:space="preserve">public:
    Tooltip();

    ~Tooltip();

    void hide();

    void show();

    void setText(const QVector&lt;QString&gt;&amp; lines);

    void move(const QPoint&amp; position);
</y:MethodLabel>
          </y:UML>
        </y:UMLClassNode>
      </data>
    </node>
    <node id="n19">
      <data key="d4" xml:space="preserve"/>
      <data key="d6">
        <y:UMLClassNode>
          <y:Geometry height="950.3958333333333" width="533.4375" x="-1586.71875" y="-775.1979166666666"/>
          <y:Fill color="#C3C3C3" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="13" fontStyle="bold" hasBackgroundColor="false" hasLineColor="false" height="19.92626953125" horizontalTextPosition="center" iconTextGap="4" modelName="custom" textColor="#000000" verticalTextPosition="bottom" visible="true" width="74.052734375" x="229.6923828125" xml:space="preserve" y="465.23478190104163">TextWidget<y:LabelModel><y:SmartNodeLabelModel distance="4.0"/></y:LabelModel><y:ModelParameter><y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/></y:ModelParameter></y:NodeLabel>
          <y:UML clipContent="true" constraint="" hasDetailsColor="false" omitDetails="false" stereotype="QObject" use3DEffect="false">
            <y:AttributeLabel xml:space="preserve">private:
    QRawFont mRawFont;

    QPen   mPen;
    QPen   mPenDisabled;
    QBrush mBrush;
    QBrush mBrushDisabled;

    QVector&lt;QString&gt; mLines;

    qreal mGlyphPadH = 3.75;
    qreal mGlyphPadV = 5.0;

    qreal mLineHeight;
    qreal mWidth;

    QRect mPaddings = QRect(0, 0, 0, 0);

    QGraphicsDropShadowEffect* mShadow = nullptr;

    QColor mBorderColor = Qt::transparent;
    QColor mBackgroundColor = Qt::transparent;

    uint mColumnSeparator = std::numeric_limits&lt;uint&gt;::max();
    QVector&lt;qreal&gt; mColumnOffsets;</y:AttributeLabel>
            <y:MethodLabel xml:space="preserve">public:
    explicit TextWidget(QWidget* parent = nullptr);
    TextWidget(QWidget* parent, Qt::GlobalColor color, qreal fsize = 14.0, qreal padh = 1.0);
    ~TextWidget();

    uint32_t textWidth() const

    uint32_t textHeight() const

    void enableShadow();

    void setBackgroundColor(QColor color)

    void setBorderColor(QColor color)

    void setPaddings(int32_t left, int32_t right, int32_t top, int32_t bottom)

    void setColor(QColor c)

    bool setColumnSeperator(QChar c);

    void appendColumnOffset(qreal offset)

public slots:
    void setText(const QString &amp; line);
    void setText(const QVector&lt;QString&gt; &amp; lines);
    void setLine(uint32_t idx, const QString &amp; line);

protected:
    void paintEvent(QPaintEvent *event) Q_DECL_OVERRIDE;

private:
    void autoResize();</y:MethodLabel>
          </y:UML>
        </y:UMLClassNode>
      </data>
    </node>
    <node id="n20">
      <data key="d4" xml:space="preserve"/>
      <data key="d6">
        <y:UMLClassNode>
          <y:Geometry height="370.1875000000002" width="486.5624999999999" x="4406.71875" y="984.90625"/>
          <y:Fill color="#C3C3C3" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="13" fontStyle="bold" hasBackgroundColor="false" hasLineColor="false" height="19.92626953125" horizontalTextPosition="center" iconTextGap="4" modelName="custom" textColor="#000000" verticalTextPosition="bottom" visible="true" width="121.00634765625" x="182.77807617187494" xml:space="preserve" y="3.0">MultibitmapSource<y:LabelModel><y:SmartNodeLabelModel distance="4.0"/></y:LabelModel><y:ModelParameter><y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/></y:ModelParameter></y:NodeLabel>
          <y:UML clipContent="true" constraint="" hasDetailsColor="false" omitDetails="false" stereotype="" use3DEffect="false">
            <y:AttributeLabel xml:space="preserve">private:
    FREE_IMAGE_FORMAT mImageFormat;
    FIMULTIBITMAP* mMultibitmap = nullptr;
    std::unique_ptr&lt;MultibitmapBuffer&gt; mBuffer = nullptr;</y:AttributeLabel>
            <y:MethodLabel xml:space="preserve">public:
    MultibitmapSource(const QString &amp; filename, FREE_IMAGE_FORMAT fif);

    ~MultibitmapSource() Q_DECL_OVERRIDE;

private:
    uint32_t doPagesCount() const Q_DECL_OVERRIDE;

    const ImagePage* doDecodePage(uint32_t pageIdx) Q_DECL_OVERRIDE;

    void doReleasePage(const ImagePage* page) Q_DECL_OVERRIDE;

    bool doStoresDifference() const Q_DECL_OVERRIDE;
</y:MethodLabel>
          </y:UML>
        </y:UMLClassNode>
      </data>
    </node>
    <node id="n21">
      <data key="d4" xml:space="preserve"/>
      <data key="d6">
        <y:UMLClassNode>
          <y:Geometry height="127.68750000000045" width="365.3124999999999" x="5037.34375" y="1106.1562499999998"/>
          <y:Fill color="#C3C3C3" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="13" fontStyle="bold" hasBackgroundColor="false" hasLineColor="false" height="19.92626953125" horizontalTextPosition="center" iconTextGap="4" modelName="custom" textColor="#000000" verticalTextPosition="bottom" visible="true" width="115.2109375" x="125.05078125" xml:space="preserve" y="53.88061523437523">MultibitmapBuffer<y:LabelModel><y:SmartNodeLabelModel distance="4.0"/></y:LabelModel><y:ModelParameter><y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/></y:ModelParameter></y:NodeLabel>
          <y:UML clipContent="true" constraint="" hasDetailsColor="false" omitDetails="false" stereotype="" use3DEffect="false">
            <y:AttributeLabel xml:space="preserve">std::vector&lt;unsigned char&gt; data;
FIMEMORY* stream = nullptr;</y:AttributeLabel>
            <y:MethodLabel xml:space="preserve"/>
          </y:UML>
        </y:UMLClassNode>
      </data>
    </node>
    <node id="n22">
      <data key="d4" xml:space="preserve"/>
      <data key="d6">
        <y:UMLClassNode>
          <y:Geometry height="461.2812499999998" width="435.3124999999999" x="-607.6562499999999" y="-1130.640625"/>
          <y:Fill color="#C3C3C3" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="13" fontStyle="bold" hasBackgroundColor="false" hasLineColor="false" height="19.92626953125" horizontalTextPosition="center" iconTextGap="4" modelName="custom" textColor="#000000" verticalTextPosition="bottom" visible="true" width="81.263671875" x="177.02441406249994" xml:space="preserve" y="220.6774902343749">MenuWidget<y:LabelModel><y:SmartNodeLabelModel distance="4.0"/></y:LabelModel><y:ModelParameter><y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/></y:ModelParameter></y:NodeLabel>
          <y:UML clipContent="true" constraint="" hasDetailsColor="false" omitDetails="false" stereotype="" use3DEffect="false">
            <y:AttributeLabel xml:space="preserve">private:
    QString text = "";
    bool checked = false;

    QLayout* mLayout;
    TextWidget* mBulletWidget;
    TextWidget* mTextWidget;</y:AttributeLabel>
            <y:MethodLabel xml:space="preserve">signals:
    void toggled(bool checked) const;
    void activated() const;

public slots:
    void onActionToggled(bool checked);

public:
    MenuWidget(QWidget *parent = nullptr);
    MenuWidget(const QString &amp;text, QWidget *parent = nullptr);

    ~MenuWidget();

    QSize minimumSizeHint() const Q_DECL_OVERRIDE;
    void paintEvent(QPaintEvent* e) Q_DECL_OVERRIDE;
    void mouseReleaseEvent(QMouseEvent* evt) Q_DECL_OVERRIDE;

private:
    void init();</y:MethodLabel>
          </y:UML>
        </y:UMLClassNode>
      </data>
    </node>
    <node id="n23">
      <data key="d4" xml:space="preserve"/>
      <data key="d6">
        <y:UMLClassNode>
          <y:Geometry height="183.07812500000023" width="431.8749999999999" x="4824.0625" y="-151.5390625000001"/>
          <y:Fill color="#C3C3C3" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="13" fontStyle="bold" hasBackgroundColor="false" hasLineColor="false" height="19.92626953125" horizontalTextPosition="center" iconTextGap="4" modelName="custom" textColor="#000000" verticalTextPosition="bottom" visible="true" width="34.3544921875" x="198.76025390624994" xml:space="preserve" y="3.0">Pixel<y:LabelModel><y:SmartNodeLabelModel distance="4.0"/></y:LabelModel><y:ModelParameter><y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/></y:ModelParameter></y:NodeLabel>
          <y:UML clipContent="true" constraint="" hasDetailsColor="false" omitDetails="false" stereotype="" use3DEffect="false">
            <y:AttributeLabel xml:space="preserve">public:
    uint32_t y = 0;
    uint32_t x = 0;
    QString repr;</y:AttributeLabel>
            <y:MethodLabel xml:space="preserve">private:
    static
    bool getBitmapPixel(FIBITMAP* src, uint32_t y, uint32_t x, Pixel* pixel);</y:MethodLabel>
          </y:UML>
        </y:UMLClassNode>
      </data>
    </node>
    <node id="n24">
      <data key="d4" xml:space="preserve"/>
      <data key="d6">
        <y:UMLClassNode>
          <y:Geometry height="406.2812499999998" width="420.3125" x="-600.1562499999999" y="-1793.1406249999998"/>
          <y:Fill color="#C3C3C3" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="13" fontStyle="bold" hasBackgroundColor="false" hasLineColor="false" height="19.92626953125" horizontalTextPosition="center" iconTextGap="4" modelName="custom" textColor="#000000" verticalTextPosition="bottom" visible="true" width="71.16455078125" x="174.573974609375" xml:space="preserve" y="193.17749023437477">ExifWidget<y:LabelModel><y:SmartNodeLabelModel distance="4.0"/></y:LabelModel><y:ModelParameter><y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/></y:ModelParameter></y:NodeLabel>
          <y:UML clipContent="true" constraint="" hasDetailsColor="false" omitDetails="false" stereotype="" use3DEffect="false">
            <y:AttributeLabel xml:space="preserve">private:
    bool mActive = false;
    TextWidget* mText;</y:AttributeLabel>
            <y:MethodLabel xml:space="preserve">public:
    static
    ExifWidget&amp; getInstance();

    void activate();

    void setExif(const Exif&amp; exif);

    void setEmpty();

    bool isActive()

public:
    ExifWidget();

    ~ExifWidget() override;

    void keyPressEvent(QKeyEvent *event) Q_DECL_OVERRIDE;
    void paintEvent(QPaintEvent * event) Q_DECL_OVERRIDE;
    void closeEvent(QCloseEvent* event) Q_DECL_OVERRIDE;</y:MethodLabel>
          </y:UML>
        </y:UMLClassNode>
      </data>
    </node>
    <node id="n25">
      <data key="d4" xml:space="preserve"/>
      <data key="d6">
        <y:UMLClassNode>
          <y:Geometry height="326.4375000000002" width="582.8124999999999" x="-201.40624999999994" y="166.7812499999999"/>
          <y:Fill color="#C3C3C3" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="13" fontStyle="bold" hasBackgroundColor="false" hasLineColor="false" height="19.92626953125" horizontalTextPosition="center" iconTextGap="4" modelName="custom" textColor="#000000" verticalTextPosition="bottom" visible="true" width="74.0654296875" x="254.37353515624994" xml:space="preserve" y="153.2556152343751">UniqueTick<y:LabelModel><y:SmartNodeLabelModel distance="4.0"/></y:LabelModel><y:ModelParameter><y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/></y:ModelParameter></y:NodeLabel>
          <y:UML clipContent="true" constraint="" hasDetailsColor="false" omitDetails="false" stereotype="QObject" use3DEffect="false">
            <y:AttributeLabel xml:space="preserve">public:
    using IdType_ = uint64_t;

private:
    IdType_ mId;</y:AttributeLabel>
            <y:MethodLabel xml:space="preserve">public:
    template &lt;typename Duration_, typename Slot_&gt;
    UniqueTick(IdType_ id, Duration_ delay, const QObject* dst, Slot_ &amp;&amp; slot, QObject *parent = nullptr)
    
    ~UniqueTick() = default;

signals:
    void tick(const IdType_ &amp; id);

public slots:
    void onTimerTick()</y:MethodLabel>
          </y:UML>
        </y:UMLClassNode>
      </data>
    </node>
    <edge id="e0" source="n0" target="n1">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="-311.9183635330454" ty="1110.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="diamond" target="none"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e1" source="n0" target="n2">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="dashed" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e2" source="n2" target="n1">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="-202.41907611849024" ty="360.0"/>
          <y:LineStyle color="#000000" type="dashed" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e3" source="n1" target="n3">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="dashed" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e4" source="n4" target="n5">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="white_delta"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e5" source="n5" target="n6">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="white_diamond" target="none"/>
          <y:EdgeLabel alignment="center" configuration="AutoFlippingLabel" distance="2.0" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="18.701171875" horizontalTextPosition="center" iconTextGap="4" modelName="custom" preferredPlacement="anywhere" ratio="0.5" textColor="#000000" verticalTextPosition="bottom" visible="true" width="22.01171875" x="-41.005859375" xml:space="preserve" y="-104.76018645529183">1..*<y:LabelModel><y:SmartEdgeLabelModel autoRotationEnabled="false" defaultAngle="0.0" defaultDistance="10.0"/></y:LabelModel><y:ModelParameter><y:SmartEdgeLabelModelParameter angle="0.0" distance="30.0" distanceToCenter="true" position="left" ratio="0.5" segment="0"/></y:ModelParameter><y:PreferredPlacementDescriptor angle="0.0" angleOffsetOnRightSide="0" angleReference="absolute" angleRotationOnRightSide="co" distance="-1.0" frozen="true" placement="anywhere" side="anywhere" sideReference="relative_to_edge_flow"/></y:EdgeLabel>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e6" source="n6" target="n7">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="256.86471256555524" sy="-120.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="dashed" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e7" source="n6" target="n8">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="diamond" target="none"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e8" source="n1" target="n9">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="311.85795787808865" sy="-630.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="diamond" target="none"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e9" source="n1" target="n10">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0">
            <y:Point x="1185.6619739913692" y="1170.0"/>
          </y:Path>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="diamond" target="none"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e10" source="n10" target="n11">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="234.5099354171516" sy="-417.39354584130615" tx="-192.31795142455076" ty="302.60645415869385"/>
          <y:LineStyle color="#000000" type="dashed" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e11" source="n1" target="n11">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="diamond" target="none"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e12" source="n11" target="n12">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="white_diamond" target="none"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e13" source="n10" target="n12">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="234.4733143234016" sy="120.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="white_delta"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e14" source="n11" target="n13">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="diamond" target="none"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e15" source="n13" target="n5">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="diamond" target="none"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e16" source="n13" target="n14">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="circle" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e17" source="n14" target="n6">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="diamond" target="none"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e18" source="n11" target="n15">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="-192.30689197542597" sy="-270.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="dashed" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e19" source="n15" target="n16">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="dashed" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e20" source="n1" target="n17">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="311.9028187179315" sy="-720.0" tx="0.0" ty="0.0">
            <y:Point x="1290.0" y="-270.0"/>
            <y:Point x="1290.0" y="-1020.0"/>
          </y:Path>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="diamond" target="none"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e21" source="n1" target="n18">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="-311.86702075960716" sy="-750.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="diamond" target="none"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e22" source="n18" target="n19">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="diamond" target="none"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e23" source="n1" target="n19">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="-311.88098560335754" sy="-420.0" tx="266.75114330289284" ty="330.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="diamond" target="none"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e24" source="n20" target="n21">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="diamond" target="none"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e25" source="n20" target="n5">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="white_delta"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e26" source="n1" target="n22">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="-311.8670207596074" sy="-840.0" tx="0.0" ty="0.0">
            <y:Point x="30.0" y="-390.0"/>
            <y:Point x="30.0" y="-900.0"/>
          </y:Path>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="diamond" target="none"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e27" source="n22" target="n19">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="266.74259838101784" ty="-150.0">
            <y:Point x="-840.0" y="-900.0"/>
            <y:Point x="-840.0" y="-450.0"/>
          </y:Path>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="diamond" target="none"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e28" source="n6" target="n23">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="256.88183865539577" sy="150.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="dashed" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e29" source="n1" target="n24">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="-311.89143482210716" sy="-930.0" tx="210.13249095914284" ty="150.0">
            <y:Point x="120.0" y="-480.0"/>
            <y:Point x="120.0" y="-1440.0"/>
          </y:Path>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="diamond" target="none"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e30" source="n24" target="n19">
      <data key="d8" xml:space="preserve"/>
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="266.6952961349241" ty="-270.0">
            <y:Point x="-930.0" y="-1590.0"/>
            <y:Point x="-930.0" y="-570.0"/>
          </y:Path>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="diamond" target="none"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e31" source="n24" target="n8">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0">
            <y:Point x="4350.0" y="-1590.0"/>
          </y:Path>
          <y:LineStyle color="#000000" type="dashed" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e32" source="n1" target="n25">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="-311.8520967102062" sy="-120.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="dashed" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e33" source="n11" target="n6">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="192.30922360898376" sy="-270.0" tx="-256.8673569813536" ty="-210.0">
            <y:Point x="3060.0" y="180.0"/>
            <y:Point x="3060.0" y="-420.0"/>
          </y:Path>
          <y:LineStyle color="#000000" type="dashed" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
  </graph>
  <data key="d7">
    <y:Resources/>
  </data>
</graphml>
